import types
from django.conf.urls import url
from rest_framework import routers, viewsets

# Based on http://stackoverflow.com/questions/18818179/routing-api-views-in-django-rest-framework
# Changed solution to allow for function views


class DefaultRouterWithSimpleViews(routers.DefaultRouter):
    """
    Extends functionality of DefaultRouter adding possibility to register
    simple API views, not just Viewsets.
    """

    def get_routes(self, viewset):
        """
        Checks if the viewset is an instance of ViewSet, otherwise assumes
        it's a simple view and does not run original `get_routes` code.
        """
        if is_viewset(viewset):
            return super(DefaultRouterWithSimpleViews, self).get_routes(viewset)

        return []

    def get_urls(self):
        """
        Append non-viewset views to the urls generated by the original `get_urls` method.
        """
        # URLs for viewsets
        ret = super(DefaultRouterWithSimpleViews, self).get_urls()

        # URLs for simple views
        for prefix, viewset, basename in self.registry:

            # Skip viewsets
            if is_viewset(viewset):
                continue

            # URL regex
            regex = '{prefix}{trailing_slash}$'.format(
                prefix=prefix,
                trailing_slash=self.trailing_slash
            )

            # The view name has to have suffix "-list" due to specifics
            # of the DefaultRouter implementation.
            view = viewset if isinstance(viewset, types.FunctionType) else viewset.as_view()
            ret.append(url(regex, view, name='{0}-list'.format(basename)))

        return ret


def is_viewset(thingy):
    return not isinstance(thingy, types.FunctionType) and issubclass(thingy, viewsets.ViewSetMixin)

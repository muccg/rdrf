version: '2'
services:

  # data only container pattern
  datadev:
    image: debian:jessie
    volumes:
      - .:/app
      - ./data/dev:/data

  datatest:
    image: debian:jessie
    volumes:
      - .:/app
      - ./data/tests:/data

  dataprodselenium:
    image: debian:jessie
    volumes:
      - .:/app
      - ./data/selenium/prod:/data

  datadevselenium:
    image: debian:jessie
    volumes:
      - .:/app
      - ./data/selenium/dev:/data

  jasper:
    image: muccg/jasper-reports-server:6.1.1
    command: development
    ports:
      - "8080"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=webapp
      - DB_USERNAME=webapp
      - DB_PASSWORD=webapp
      - WAIT_FOR_DB=1

  db:
    image: muccg/postgres-ssl:9.4
    environment:
      - POSTGRES_USER=webapp
      - POSTGRES_PASSWORD=webapp
    ports:
      - "5432"

  cache:
    image: memcached:1.4

  triplestore:
    image: muccg/allegro:4.14.1
    ports:
      - "10035"

  nginx:
    image: muccg/nginx-uwsgi:1.10
    ports:
      - "8443:443"
      - "8080:80"
    volumes:
      - ./data/nginx:/data

  runserver:
    image: muccg/rdrf-dev
    environment:
      - WAIT_FOR_DB=1
      - WAIT_FOR_CLINICAL_DB=1
      - PRODUCTION=0
      - WAIT_FOR_REPORTING_DB=1
      - WAIT_FOR_CACHE=1
      - DJANGO_MAILGUN_API_KEY=${DJANGO_MAILGUN_API_KEY}
      - DESIGN_MODE=1

  uwsgi:
    image: muccg/rdrf-dev
    command: uwsgi_local
    environment:
      - WAIT_FOR_DB=1
      - WAIT_FOR_CLINICAL_DB=1
      - WAIT_FOR_REPORTING_DB=1
      - WAIT_FOR_CACHE=1
      - WAIT_FOR_RUNSERVER=1
      # note: important to wait for runserver in dev as both will attempt to syncdb etc
    ports:
      - "9000:9000"
      - "9001:9001"
      - "9100:9100"
      - "9101:9101"
